from flask import Flask, render_template, request, jsonify
from flask_sqlalchemy import SQLAlchemy
import os

app = Flask(__name__)

# PostgreSQL connection from environment variables
POSTGRES_USER = os.environ.get("POSTGRES_USER", "postgres")
POSTGRES_PASSWORD = os.environ.get("POSTGRES_PASSWORD", "postgres")
POSTGRES_DB = os.environ.get("POSTGRES_DB", "applicants_db")
POSTGRES_HOST = os.environ.get("POSTGRES_HOST", "db")
POSTGRES_PORT = os.environ.get("POSTGRES_PORT", 5432)

app.config['SQLALCHEMY_DATABASE_URI'] = f'postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{POSTGRES_HOST}:{POSTGRES_PORT}/{POSTGRES_DB}'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

# Database Model
class Applicant(db.Model):
    __tablename__ = 'applicants'
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    email = db.Column(db.String(100), nullable=False, unique=True)
    score = db.Column(db.Float, nullable=False)

# Home route to enter applicant details
@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        name = request.form.get("name")
        email = request.form.get("email")
        score = float(request.form.get("score"))
        new_applicant = Applicant(name=name, email=email, score=score)
        db.session.add(new_applicant)
        db.session.commit()
        return "Applicant added successfully!"
    return render_template("index.html")

# REST API to get applicants with score > 80%
@app.route("/api/top_applicants", methods=["GET"])
def top_applicants():
    applicants = Applicant.query.filter(Applicant.score > 80).all()
    result = [
        {"id": a.id, "name": a.name, "email": a.email, "score": a.score}
        for a in applicants
    ]
    return jsonify(result)

if __name__ == "__main__":
    # Ensure DB tables exist (safe to run)
    with app.app_context():
        db.create_all()
    app.run(host="0.0.0.0", port=5000, debug=True)

